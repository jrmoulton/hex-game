/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package hex;

import hex.HexGame.Player;

public class DisjointSet {
    private int[] set;
    private int size;
    private int square;

    // Top, Botton, Left, Right
    DisjointSet(int size) {
        this.size = size;
        this.square = size * size;
        this.set = new int[this.square + 4];
        for (int i = 0; i < this.square + 4; i++) {
            this.set[i] = i;
        }
    }

    public int find(int node) {
        if (this.set[node] == node) {
            return node;
        }
        this.set[node] = find(this.set[node]);
        return this.set[node];
    }

    public void union(int index1, int index2, Player player) {
        this.set[find(index1)] = find(index2);
        if (player == Player.Blue) {
            // Left
            if (index1 % this.size == 0) {
                this.set[find(index1)] = find(this.square + 2);
            }
            if (index2 % this.size == 0) {
                this.set[find(index2)] = find(this.square + 2);
            }
            // Right
            if (index1 % this.size == this.size - 1) {
                this.set[find(index1)] = find(this.square + 3);
            }
            if (index2 % this.size == this.size - 1) {
                this.set[find(index2)] = find(this.square + 3);
            }
        }
        if (player == Player.Red) {
            // Top
            if (index1 - this.size <= 0) {
                this.set[find(index1)] = find(this.square);
            }
            if (index2 - this.size <= 0) {
                this.set[find(index2)] = find(this.square);
            }
            // Bottom
            if (index1 + this.size >= this.square) {
                this.set[find(index1)] = find(this.square + 1);
            }
            if (index2 + this.size >= this.square) {
                this.set[find(index2)] = find(this.square + 1);
            }
        }
    }

    @Override
    public String toString() {
        var builder = new StringBuilder();
        for (var num : set) {
            builder.append(String.format("%s ", num));
        }
        return builder.toString();
    }

}
